require 'aws-sdk'
require 'cgi'

def s3
  $s3 ||= AWS::S3.new(access_key_id: ENV["S3_ACCESS_KEY_ID"] , secret_access_key: ENV["S3_ACCESS_KEY"], region: 'eu-west-1')
end

def bucket
  $bucket ||=  s3.buckets['prod-sky-web-toolkit']
end

def latest_version_number
  $latest_version_number ||= File.open('_config.yml').read.strip.gsub("version: ", "")
end

def version_already_exists?
  bucket.objects.any?{|obj|obj.key.include? latest_version_number}
end


def files_to_upload
  files = ['stylesheets/toolkit.css', 'images/icons.png', 'scripts/toolkit.js', 'scripts/toolkit.js.map']
  files = files + Dir.glob("scripts/utils/**/*.*") + Dir.glob("scripts/modules/**/*.*")
end

def content_type(file)
    case File.extname(file)
      when '.map'
        content_type = 'text/javascript'
      when '.js'
        content_type = 'text/javascript'
      when '.css'
        content_type = 'text/css'
      when '.png'
        content_type = 'image/png'
      else
        content_type = 'image/jpeg'
    end
    content_type
end

desc 'Deploys a new version to the CDN'
task :deploy_new_version do


  if version_already_exists?
    puts "Version #{latest_version_number} already exists. Exiting."
    next
  end

  doc_resources = []
  puts 'Uploading doc files'
  files_to_upload.each do |file|
    doc_resources << bucket.objects["#{latest_version_number}/#{file}"].write(File.open(file).read, content_type: content_type(file), acl: :public_read )
  end

end
