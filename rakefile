require 'aws-sdk'
require 'cgi'

def s3
  $s3 ||= AWS::S3.new(access_key_id: ENV["S3_ACCESS_KEY_ID"] , secret_access_key: ENV["S3_ACCESS_KEY"], region: 'eu-west-1')
end

def bucket
  $bucket ||=  s3.buckets['prod-sky-web-toolkit']
end

def latest_version_number
  $latest_version_number ||= File.open('versionfile').read.strip
end

def version_already_exists?
  bucket.objects.any?{|obj|obj.key.include? latest_version_number}
end


def files_to_upload
  files = ['stylesheets/sky_web_toolkit.css']
  files = files + Dir.glob("js/utils/**/*.*") + Dir.glob("js/modules/**/*.*")
end

task :html_example do
  html = ""
  files_to_upload.each do |file|
    html << CGI::escapeHTML(%{<script type="text/javascript" src="//web-toolkit.global.sky.com/v#{latest_version_number}/#{file}"/>}) + '<br/>' if file.include? ".js"
    html << CGI::escapeHTML(%{<link rel="stylesheet" href="//web-toolkit.global.sky.com/v#{latest_version_number}/#{file}"/>}) + '<br/>' if file.include? ".css"    
  end
  File.open('_includes/include.html', 'w') {|f| f.write(html) }

end

desc 'Deploys a new version to the CDN'
task :deploy_new_version do




  if version_already_exists?
    puts "Version #{latest_version_number} already exists. Exiting."
    next
  end

  doc_resources = []
  puts 'Uploading doc files'
  files_to_upload.each do |file|
    doc_resources << bucket.objects["v#{latest_version_number}/#{file}"].write(File.open(file).read) 
  end

  puts 'Giving public read access'
  (doc_resources).each{|resource|resource.acl = :public_read}

  puts "Deployed following resources:"
  (doc_resources).each{|resource|puts resource.public_url.to_s}

  puts 'setting content type'
  doc_resources.each do |resource|
    resource.content_type = 'text/css' if resource.key.include?('.css')
    resource.content_type = 'text/javascript' if resource.key.include?('.js')
    resource.store
  end

end
