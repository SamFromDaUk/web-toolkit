{
  "version": 3,
  "file": "toolkit.js",
  "sources": [
    "utils/hashmanager.js",
    "modules/tabs.js",
    "modules/carousel.js",
    "toolkit.js"
  ],
  "names": [],
  "mappingslGA,ADmGA;AClGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzDA,AD0DA;ACzrbA,ADsbA;ACrbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "sourcesContent": [
    "\n/**\n purpose:\n to let 'anchor' tags do their job and change the hash in the url for internal links.\n this will execute the associated callback with that hash.\n no onclick events needed.\n **/\nif (typeof toolkit==='undefined') toolkit={};\ntoolkit.hashmanager = (function() {\n\n    var vars = {\n        globalHashList: {},\n        hasLoaded: false,\n        windowLoaded: false,\n        lastExecutor: null\n    };\n\n    function bindEvents() {\n        $(window).on('hashchange', onHashChange);\n        var hashChangeSupport = 'onhashchange' in window;\n        if (!hashChangeSupport){ //IE7 support\n            vars.hash = document.location.hash;\n            setInterval(function(){\n                if (document.location.hash !== vars.hash){\n                    onHashChange(document.location.hash);\n                }\n            },200);\n        }\n        vars.windowLoaded = true;\n    }\n\n    function onHashChange(hash) {\n        var evt, fn;\n        hash = cleanHash((typeof hash === 'string') ? hash : location.hash);\n        if (hash) {\n            evt = vars.globalHashList[hash];\n            fn = 'callback';\n            vars.lastExecutor = hash;\n        } else if (vars.lastExecutor) {\n            evt = vars.globalHashList[vars.lastExecutor];\n            fn = 'undo';\n        }\n        if (evt && typeof evt[fn] === 'function') {\n            evt[fn](hash);\n        }\n    }\n\n    function remove() {\n        var loc = window.location;\n        if (\"pushState\" in history) {\n            location.hash = '!';\n            history.pushState(\"\", document.title, loc.pathname + loc.search);\n        } else {\n            location.hash = '!';\n        }\n    }\n\n    function change(hash){\n        location.hash = '!' + hash;\n    }\n\n    function register(hashList, callback, undo){\n        var globalHashList = vars.globalHashList;\n        $(hashList).each(function(i, hash) {\n            hash = cleanHash(hash);\n            if (globalHashList[hash]){\n                var err = 'hashManager: hash (' + hash + ') already exists';\n                throw new Error(err);\n            }\n            globalHashList[hash] = {\n                callback: callback,\n                undo: undo\n            };\n\n            if (vars.windowLoaded && hash === cleanHash(location.hash)) {\n                onHashChange(hash);\n            }\n        });\n    }\n\n    function cleanHash(hash) {\n        return hash.replace(/[#!]/g, '');\n    }\n\n    bindEvents();\n\n    return {\n        register: register,\n        change: change,\n        remove: remove,\n        onHashChange: onHashChange,\n        cleanHash: cleanHash\n    };\n}());\n\nif (typeof window.define === \"function\" && window.define.amd) {\n    define('utils/hashmanager', [], function() {\n        return toolkit.hashmanager;\n    });\n};",
    "\n/**\n purpose:\n to automatically hook into the bootstrap html and shows/hides tabs.\n Works based registering the tabs 'hash' with the changeTab function.\n no onclick events needed.\n**/\nif (typeof toolkit==='undefined') toolkit={};\ntoolkit.tabs = (function(hash) {\n\n    var $el = {\n        tabContainer: $('section[data-function=tabs]'),\n        tabs: $('section[data-function=tabs] li[role=tab]'),\n        tabTargets: $('section[data-function=tabs] div[role=tabpanel]')\n    };\n    var vars = {\n        rememberState : $el.tabContainer.attr('data-remember-state')==='true'\n    };\n\n    function bindEvents() {\n        if (vars.rememberState){\n            hash.register(getHashList(), changeTab);\n        } else {\n            $el.tabs.on('click', function(e){\n                e.preventDefault();\n                changeTab($(this).find('a').attr('href'));\n            });\n        }\n    }\n\n    function getHashList() {\n        var arrHash = [];\n        $el.tabs.each(function(){\n            arrHash.push($(this).attr('aria-controls'));\n        });\n        return arrHash;\n    }\n\n    function changeTab(controlId){\n        $el.tabTargets.add($el.tabs).removeClass(\"selected\");\n        $('#' + controlId + '-tab').add($(\"#\" + controlId))\n            .addClass('selected');\n    }\n\n    bindEvents();\n\n    return {\n        getHashList: getHashList,\n        changeTab: changeTab\n    };\n\n}(toolkit.hashmanager));\n\n\nif (typeof window.define === \"function\" && window.define.amd) {\n    define('modules/tabs', ['utils/hashmanager'], function() {\n        return toolkit.tabs;\n    });\n};",
    "\nif (typeof toolkit==='undefined') toolkit={};\ntoolkit.carousel = (function(window, $) {\n    'use strict';\n\n    // get CSS3 capabilities\n    var has3d = (function() {\n        return ('WebKitCSSMatrix' in window && 'm11' in new window.WebKitCSSMatrix());\n    }());\n    var hasTransform = (function() {\n        var s = document.body.style;\n        return s.transform !== undefined || s.WebkitTransform !== undefined || s.MozTransform !== undefined || s.OTransform !== undefined;\n    }());\n    var clickEvent = 'ontouchend' in document.documentElement ? 'touchend' : 'click';\n\n    function Carousel(element, options) {\n        this.options = options;\n        this.$viewport = element;\n        this.$slideContainer = element.find('.skycom-carousel-container');\n        this.$slides = this.$slideContainer.find('>');\n        this.currentIndex = 0;\n        this.slideCount = this.$slides.length;\n        this.timerId = false;\n        this.touchReset();\n        this.bindEvents();\n    }\n\n    Carousel.prototype = {\n        unbindTouchEvents: function() {\n            this.$slideContainer.off('touchstart touchmove touchend touchcancel');\n        },\n        bindTouchEvents: function() {\n            this.$slideContainer\n                .on('touchstart', this.touchstart.bind(this))\n                .on('touchmove', this.touchmove.bind(this))\n                .on('touchend', this.touchend.bind(this))\n                .on('touchcancel', this.touchReset.bind(this));\n        },\n        bindEvents: function() {\n            this.bindTouchEvents();\n            this.$slideContainer.find('a').on('click', this.pause.bind(this));\n        },\n        unbindEvents: function() {\n            this.unbindTouchEvents();\n            this.$slideContainer.find('a').off('click');\n        },\n        setOffset: function(percent, animate) {\n            var $container = this.$slideContainer.removeClass(\"animate\");\n            if (animate) $container.addClass(\"animate\");\n            if (has3d) {\n                $container.css(\"transform\", \"translate3d(\"+ percent +\"%,0,0) scale3d(1,1,1)\");\n            } else if (hasTransform) {\n                $container.css(\"transform\", \"translate(\"+ percent +\"%,0)\");\n            } else if (animate) {\n                $container.animate({'left': (percent*2) + '%'}, 600);\n            } else {\n                $container.css({'left': (percent*2) + '%'});\n            }\n            return this;\n        },\n        moveSlide : function(opts){//index, start, end, callback, reverse\n            var self = this,\n                $slides = this.$slides,\n                cssFloat, indexToShow;\n\n            indexToShow = (opts.index >= this.slideCount)?0:(opts.index < 0) ? this.slideCount - 1 : opts.index;\n            cssFloat = (opts.index>this.currentIndex && !opts.reverse) ? 'left' : 'right';\n\n            $slides.filter(':not(:eq(' + this.currentIndex + '))').hide();\n            $slides.eq(this.currentIndex).css('float', cssFloat);\n            $slides.eq(indexToShow).show().css('float', cssFloat == 'left' ? 'right' : 'left');\n\n            this.setOffset(opts.start, false);\n            if (typeof opts.end !== 'undefined'){\n                setTimeout(function(){\n                    self.setOffset(opts.end, true);\n                    self.$viewport.trigger('change', indexToShow);\n                }, 20);\n                this.currentIndex = indexToShow;\n                if (typeof opts.callback == 'function') opts.callback(indexToShow);\n            }\n            return indexToShow;\n        },\n        goto: function(slideIndex, pause, callback) {\n            if (pause !== false) this.pause();\n            if (slideIndex===this.currentIndex) { return; }\n\n            if ((slideIndex>this.currentIndex)) {\n                this.moveSlide({index: slideIndex, start:0, end:-50, callback:callback});\n            } else{\n                this.moveSlide({index: slideIndex, start:-50, end: 0, callback:callback});\n            }\n            return this;\n        },\n        next: function(pause, callback) {\n            this.goto(this.currentIndex + 1, pause, callback);\n            this.$viewport.find('.indicators, .actions').css('display', 'block');\n            return this;\n        },\n        previous: function() {\n            this.goto(this.currentIndex - 1);\n            this.$viewport.find('.indicators, .actions').css('display', 'block');\n            return this;\n        },\n        play: function(callback, delay) {\n            var self = this,\n                interval = this.options.interval;\n            self.timerId = setTimeout(function() { //timeout for small delay after pressing pay button\n                self.next(false);\n                self.timerId = setTimeout(function loop() {  //timeout interval between slides\n                    self.next(false, function() {\n                        self.timerId = setTimeout(loop, interval);\n                    });\n                }, interval);\n            }, delay || this.options.onPlayDelay);\n\n            this.$viewport.trigger('playing');\n            if (typeof callback == 'function') callback();\n            return this;\n        },\n        pause: function(callback) {\n            clearTimeout(this.timerId);\n\n            this.$viewport.trigger('paused');\n            if (typeof callback == 'function') callback();\n            return this;\n        },\n        touchstart: function(e) {\n            var touch = e.originalEvent.touches[0];\n            this.pause();\n            this.swipe.start = {x: touch.pageX, y:touch.pageY};\n        },\n        touchmove: function(e) {\n            var swipe = this.swipe,\n                touch = e.originalEvent.touches[0],\n                xDifference = touch.pageX - swipe.start.x,\n                yDifference = touch.pageY - swipe.start.y,\n                scrollingCarousel = Math.abs(xDifference) > Math.abs(yDifference),\n                slideIndex = xDifference<0?this.currentIndex+1:this.currentIndex- 1,\n                positionAsPercentage;\n\n            if (!swipe.start || scrollingCarousel===false) return;\n            e.preventDefault();\n\n            positionAsPercentage = (xDifference / this.$slideContainer.outerWidth(true)) * 100;\n            if (xDifference>0) positionAsPercentage -=50;\n            this.swipe.positionAsPercentage = positionAsPercentage;\n\n            this.moveSlide({index:slideIndex,start:positionAsPercentage});\n        },\n        touchend: function(e) {\n            if (!this.swipe.start) return;\n            var swipe = this.swipe,\n                position = swipe.positionAsPercentage,\n                touch = e.originalEvent.changedTouches[0],\n                xDifference = touch.pageX - swipe.start.x,\n                direction = null,\n                threshold = 75;\n            if (Math.abs(xDifference) > threshold) {\n                direction = (xDifference < 0) ? 'left' : 'right';\n            }\n\n            if (direction === 'left') {\n                this.moveSlide({\n                    index: this.currentIndex + 1,\n                    start: position,\n                    end: -50\n                });\n            } else if (direction === 'right') {\n                this.moveSlide({\n                    index: this.currentIndex - 1,\n                    start: position,\n                    end:0\n                });\n            } else if (position !== 0) {\n                var start = (xDifference > 0) ? position + 50 : position,\n                    index = this.currentIndex,\n                    end = 0,\n                    reverse;\n                if (start < 0){\n                    this.currentIndex = (index+1>=this.slideCount) ? 0 : index+1;\n                } else {\n                    this.currentIndex -= 1;\n                    end = -50;\n                    start -= 50;\n                }\n                reverse = this.currentIndex===0 && index === this.slideCount-1;\n                this.moveSlide({\n                    index: index,\n                    start: start,\n                    end: end,\n                    reverse: reverse\n                });\n            }\n            this.touchReset();\n        },\n        touchReset: function() {\n            this.swipe = {\n                start: false,\n                positionAsPercentage: 0\n            };\n        }\n    };\n\n    function Video(carousel, options) {\n        this.carousel = carousel;\n        this.wrapper = carousel.$viewport.find('.video-wrapper');\n        this.wrapper.attr('id', 'video-' + options.player.videoId);\n        this.videocontrolcontainer = carousel.$viewport.find('.videocontrolcontainer');\n        this.player = carousel.$viewport.find('video');\n        this.player.sky_html5player(options.player);\n        this.videocontrolcontainer.find('img').on('error', function() {\n            this.src = options.placeHolderImage;\n        });\n        this.bindEvents();\n    }\n\n    Video.prototype = {\n        bindEvents: function(){\n            var $self = this,\n                hijackLink = function() {\n                  return false;\n                },\n                stop = function(e){\n                    $self.stop();\n                    $wrapper.off('click', hijackLink);\n                    return false;\n                },\n                $wrapper = this.wrapper;\n            $wrapper.on('click', hijackLink).find('.close').one(clickEvent, stop);\n            this.player.on('ended webkitendfullscreen', stop);\n        },\n        play: function() {\n            var $self = this,\n                carouselControls = this.carousel.$viewport.find('.actions, .indicators');\n            this.originalHtml = this.videocontrolcontainer.html();\n            this.carousel.pause();\n            this.showCanvas(function() {\n                carouselControls.hide();\n                $self.carousel.unbindTouchEvents();\n                sky.html5player.play($self.wrapper);\n            });\n        },\n        stop: function() {\n            var $self = this,\n                carouselControls = this.carousel.$viewport.find('.actions, .indicators');\n            sky.html5player.close(this.wrapper);\n            this.hideCanvas( function(){\n                $self.carousel.bindTouchEvents();\n                carouselControls.show();\n                $self.videocontrolcontainer.html($self.originalHtml);\n            });\n        },\n\n        showCanvas: function(callback) {\n            var height,\n                $carousel = this.carousel.$viewport,\n                $overlay = $carousel.find('.video-overlay'),\n                $wrapper = $carousel.find('.video-wrapper'),\n                $play = $carousel.find('.play-video'),\n                $close = $carousel.find('.video-wrapper .close'),\n                speed= 500;\n            this.originalHeight = $carousel.height();\n            $wrapper.addClass('playing-video');\n            $overlay.fadeIn(function() {\n                $play.fadeOut();\n                height = Math.round(($carousel.width() / 16) * 9);\n                $carousel.animate({ height: height }, speed, function() {\n                    callback();\n                    $wrapper.show();\n                    $overlay.fadeOut(speed, function() {\n                        $close.addClass('active');\n                    });\n                });\n            });\n        },\n        hideCanvas: function(callback) {\n            var $carousel = this.carousel.$viewport,\n                $overlay = $carousel.find('.video-overlay'),\n                $wrapper = $carousel.find('.video-wrapper'),\n                $play = $carousel.find('.play-video'),\n                $close = $carousel.find('.video-wrapper .close'),\n                speed = 500,\n                originalHeight = this.originalHeight;\n            $overlay.fadeIn(speed, function() {\n                $close.removeClass('active');\n                $('.skycom-carousel').animate({ height: originalHeight }, speed, function(){\n                    $('.skycom-carousel').css({ height: 'auto' });\n                    callback();\n                    $play.fadeIn();\n                    $overlay.hide();\n                    $wrapper.fadeOut();\n                    $wrapper.removeClass('playing-video');\n                });\n            });\n        }\n    };\n\n    // jquerify\n    $.fn.skycom_carousel = function(params) {\n        var options = $.extend(true, {\n            carousel: {\n\n                actions: [\n                    { id: 'previous', label: 'Previous' },\n                    { id: 'next', label: 'Next' },\n                    { id: 'play', label: 'Play Carousel' },\n                    { id: 'pause', label: 'Pause Carousel' }\n                ],\n                autoplay: true,\n                onPlayDelay: 500,\n                interval: 6000\n            },\n            video: {\n                player: {\n                    token:\"8D5B12D4-E1E6-48E8-AF24-F7B13050EE85\",\n                    autoplay: false,\n                    videoId: null,\n                    freewheel: false //disable ads\n                },\n                placeHolderImage: '//static.video.sky.com/posterframes/skychasky.jpg',\n            }\n        }, params);\n\n        // generating default markup\n        var markup = {\n            actions: function($element, options){\n\n                var html = '', action, label, i, extraClass,\n                    actions = options.actions,\n                    onclick = options.onclick;\n                if(options.count <= 1) return this;\n                for (i in actions) {\n                    extraClass = '';\n                    action = actions[i].id;\n                    label = actions[i].label;\n                    if (action=='next' || action=='previous'){\n                        extraClass=' hidden-touch ';\n                    }\n                    html += '<a href=\"#\" class=\"skycom-internal ' + extraClass + action + '\" >';\n                    html += '<span class=\"icon-carousel-' + action + '\"></span>' + label;\n                    if (action == 'next' || action == 'previous') {\n                        html += '<span class=\"icon-carousel-' + action + '-over over\"></span>';\n                    }\n                    html += '</a>';\n                }\n                $element.prepend('<div class=\"actions\">' + html + '</div>').find('> .actions > *').each(function(index) {\n                    $(this).attr('data-action', actions[index].id).on('click', function(e) {\n                        onclick(actions[index].id);\n                        e.preventDefault();\n                    });\n                });\n                return this;\n            },\n            indicators: function($element, options) {\n\n                var $indicators, i,\n                    count = options.count,\n                    onclick = options.onclick,\n                    html = '<div class=\"indicators\"><div class=\"container\">',\n                    className = ' class=\"active\"';\n                if (count <= 1) return this;\n                for (i = count; i--;) {\n                    html += '<span' + className + ' data-track data-tracking-label=\"indicator\"></span>';\n                    className = '';\n                }\n                $indicators = $(html + '</div></div>').on('click', 'span', function(e) {\n                    onclick($(e.currentTarget).index());\n                });\n                $element.append($indicators);\n                return this;\n            },\n            video: function($element) {\n                $element.append('<div class=\"video-overlay\"></div>');\n                return this;\n            }\n        };\n\n        return this.each(function() {\n            var $this = $(this);\n            var carousel = new Carousel($this, options.carousel);\n\n            markup.indicators($this, {\n                    count: carousel.slideCount,\n                    onclick: function(index) {\n                        carousel.goto(index);\n                    }\n                })\n                .actions($this, {\n                    count: carousel.slideCount,\n                    actions: options.carousel.actions,\n                    onclick: function(action) {\n                        carousel[action]();\n                    }\n                })\n                .video($this);\n\n            $this.on('click', '.play-video', function(e) {\n                options.video.player.videoId = $(this).attr('data-video-id');\n                if (options.carousel.videoAds){\n                    options.video.player.freewheel = true;\n                }\n                var video = new Video(carousel, options.video);\n                video.play();\n                return false;\n            }).on('change',function(e, index) {\n                index = index || 0;\n                $this.find('.indicators .container > *').removeClass('active').eq(index).addClass('active');\n                carousel.$slides.removeClass('active').find('a').attr('tabindex',-1);\n                carousel.$slides.eq(index).addClass('active').find('a').removeAttr('tabindex');\n            }).on('playing',function() {\n                $this.removeClass('paused').addClass('playing');\n            }).on('paused',function() {\n                $this.removeClass('playing').addClass('paused');\n            }).on('pause',function() {\n                carousel.pause();\n            }).on('play',function() {\n                carousel.play();\n            }).on('keyup',function(e){\n                switch(e.keyCode){\n                    case 9: carousel.pause(); break; //tab\n                    case 37: carousel.previous(); break; //left arrow\n                    case 39: carousel.next(); break; //right arrow\n                }\n            }).find('.toggle-terms').on('click', function(e) {\n                carousel.$viewport.toggleClass('showing-tandcs');\n            });\n\n            carousel[options.carousel.autoplay === true ? 'play' : 'pause'](false, options.carousel.interval);\n            $this.trigger('change');\n        });\n    };\n}(window, jQuery));\n\nif (typeof window.define === \"function\" && window.define.amd) {\n    define('modules/carousel', [], function() {\n        return toolkit.carousel;\n    });\n};",
    "\nif (typeof window.define === \"function\" && window.define.amd) {\n//    explicitly call all js files here to ensure all files are available\n    define('toolkit',[\n        'utils/hashmanager',\n        'modules/tabs',\n        'modules/carousel'], function(hashmanager, tabs, carousel){\n\n        return {\n            hashmanager: hashmanager,\n            tabs: tabs,\n            carousel: carousel\n        };\n    });\n};"
  ]
}